{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/store/backupCurrencies.js","../src/store/index.js","../node_modules/svelte/store/index.mjs","../src/components/DisplayItem.svelte","../src/components/Display.svelte","../src/components/CurrenciesItem.svelte","../src/components/Currencies.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? requestAnimationFrame : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_binding_callback(fn) {\n    binding_callbacks.push(fn);\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.shift()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction on_outro(callback) {\n    outros.callbacks.push(callback);\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        on_outro(() => {\n                            block.d(1);\n                            info.blocks[i] = null;\n                        });\n                        block.o(1);\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            if (block.i)\n                block.i(1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    on_outro(() => {\n        destroy_block(block, lookup);\n    });\n    block.o(1);\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        if (block.i)\n            block.i(1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy(component, detaching) {\n    if (component.$$) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro && component.$$.fragment.i)\n            component.$$.fragment.i();\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, _oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy(this, true);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy(this, true);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, add_transform, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, once, now, raf, set_now, set_raf, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","const backupCurrencies = [\n  {\n    name: 'EUR',\n    isSelected: false\n  },\n  {\n    name: 'GBP',\n    isSelected: true\n  },\n  {\n    name: 'USD',\n    isSelected: false\n  },\n  {\n    name: 'CZK',\n    isSelected: false\n  }\n]\n\nexport default backupCurrencies\n","import { writable } from 'svelte/store'\nimport backupCurrencies from './backupCurrencies'\n\nconst currencies = () => {\n  const { subscribe, update } = writable([])\n\n  const toggleCurrencyStatus = name => {\n    update(items => {\n      const clone = JSON.parse(JSON.stringify(items))\n      const currency = clone.find(item => item.name === name)\n\n      if (currency) {\n        currency.isSelected = !currency.isSelected\n\n        return clone\n      }\n\n      return items\n    })\n  }\n\n  const loadCurrencies = async () => {\n    try {\n      const data = await fetch(\n        'https://openexchangerates.org/api/currencies.json'\n      )\n      const json = await data.json()\n\n      const currencies = []\n\n      for (const currency in json) {\n        currencies.push({ name: currency, isSelected: false })\n      }\n\n      update(() => currencies)\n    } catch (error) {\n      console.log('ERROR: STORE -> fetchCurrencies -> error', error)\n\n      update(() => backupCurrencies)\n    }\n  }\n\n  return {\n    subscribe,\n    loadCurrencies,\n    toggleCurrencyStatus\n  }\n}\n\nexport const currenciesStore = currencies()\n","import { noop, safe_not_equal, run_all, is_function } from '../internal';\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (!stop) {\n                return; // not ready\n            }\n            subscribers.forEach((s) => s[1]());\n            subscribers.forEach((s) => s[0](value));\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    const invalidators = [];\n    const store = readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            run_all(invalidators);\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n    return {\n        subscribe(run, invalidate = noop) {\n            invalidators.push(invalidate);\n            const unsubscribe = store.subscribe(run, invalidate);\n            return () => {\n                const index = invalidators.indexOf(invalidate);\n                if (index !== -1) {\n                    invalidators.splice(index, 1);\n                }\n                unsubscribe();\n            };\n        }\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get(store) {\n    let value;\n    store.subscribe((_) => value = _)();\n    return value;\n}\n\nexport { readable, writable, derived, get };\n","<script>\n  import { currenciesStore } from '../store'\n\n  export let item\n\n  const onClick = () => currenciesStore.toggleCurrencyStatus(item.name)\n</script>\n\n<style lang=\"scss\">\n  @import '../scss/_variables.scss';\n\n  .DisplayItem {\n    border: 2px solid $grey-dark;\n    border-radius: 3px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &-button {\n      padding: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 25px;\n      height: 25px;\n      background-color: $black;\n      color: white;\n      border: 2px solid $white;\n      border-radius: 50%;\n      position: absolute;\n      right: -9px;\n      top: -9px;\n      outline: none;\n      cursor: pointer;\n      transition: all 100ms linear;\n\n      &:hover {\n        background-color: $white;\n        color: $black;\n        border-color: $black;\n      }\n    }\n  }\n</style>\n\n<div class=\"DisplayItem\">\n  <span>{item.name}</span>\n  <button class=\"DisplayItem-button\" on:click={onClick}>x</button>\n</div>\n","<script>\n  import DisplayItem from './DisplayItem.svelte'\n  import { currenciesStore } from '../store'\n\n  $: selectedCurrencies = $currenciesStore.filter(currency => currency.isSelected)\n</script>\n\n<style lang=\"scss\">\n  @import '../scss/_variables.scss';\n  @import '../scss/_mixins.scss';\n\n  .Display {\n    border-radius: 3px;\n    border: 1px solid $grey-dark;\n    overflow: hidden;\n    overflow-y: auto;\n    flex: 1;\n\n    &-container {\n      @include responsiveLayout;\n    }\n  }\n</style>\n\n<div class=\"Display\">\n  <div class=\"Display-container\">\n    {#each selectedCurrencies as item (item.name)}\n      <DisplayItem {item} />\n    {/each}\n  </div>\n</div>\n","<script>\n  import { currenciesStore } from '../store'\n\n  export let item\n\n  const onClick = () => currenciesStore.toggleCurrencyStatus(item.name)\n</script>\n\n<style lang=\"scss\">\n  @import '../scss/_variables.scss';\n\n  .CurrenciesItem {\n    background-color: $white;\n    border: 1px solid $grey-light;\n    border-radius: 3px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    transition: all 100ms linear;\n\n    &-isSelected {\n      background-color: $grey-dark;\n\n      & .CurrenciesItem-name {\n        color: $white;\n      }\n    }\n\n    &:hover {\n      border-color: $grey-dark;\n      border-width: 2px;\n    }\n\n    &-name {\n      color: $blue-dark;\n      transition: color 200ms linear;\n    }\n\n    &-checkbox {\n      margin: 0 5px;\n    }\n  }\n</style>\n\n<div\n  class=\"CurrenciesItem\"\n  class:CurrenciesItem-isSelected={item.isSelected}\n  on:click={onClick}>\n  <input\n    class=\"CurrenciesItem-checkbox\"\n    type=\"checkbox\"\n    checked={item.isSelected} />\n  <span class=\"CurrenciesItem-name\">{item.name}</span>\n</div>\n","<script>\n  import { currenciesStore } from '../store'\n  import CurrenciesItem from './CurrenciesItem.svelte'\n</script>\n\n<style lang=\"scss\">\n  @import '../scss/_variables.scss';\n  @import '../scss/_mixins.scss';\n\n  .Currencies {\n    flex: 4;\n    overflow: hidden;\n    overflow-y: auto;\n\n    &-container {\n      @include responsiveLayout;\n    }\n\n    &-spinner {\n      border: 3px solid rgba(0, 0, 0, 0.2);\n      border-top-color: $blue-dark;\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n      margin: 30px auto;\n      animation: spin 1s ease-in-out infinite;\n    }\n  }\n\n  @keyframes spin {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n\n<div class=\"Currencies\">\n  {#if $currenciesStore.length > 0}\n    <div class=\"Currencies-container\">\n      {#each $currenciesStore as item (item.name)}\n        <CurrenciesItem {item} />\n      {/each}\n    </div>\n  {:else}\n    <div class=\"Currencies-spinner\" />\n  {/if}\n</div>\n","<script>\n  import { onMount } from 'svelte'\n  import { currenciesStore } from './store'\n  import Display from './components/Display.svelte'\n  import Currencies from './components/Currencies.svelte'\n\n  onMount(() => currenciesStore.loadCurrencies())\n</script>\n\n<style>\n  #app {\n    height: 100%;\n    width: 100%;\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n  }\n</style>\n\n<div id=\"app\">\n  <Display />\n  <Currencies />\n</div>\n","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","component","store","callback","unsub","$$","on_destroy","push","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","set_data","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","resolved_promise","Promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","outros","group_outros","remaining","callbacks","check_outros","on_outro","outro_and_destroy_block","block","lookup","d","delete","key","destroy_block","o","update_keyed_each","old_blocks","changed","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","i","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","c","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","mount_component","new_on_destroy","map","filter","make_dirty","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","ready","value","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","detaching","this","$destroy","type","index","indexOf","splice","backupCurrencies","isSelected","currenciesStore","start","stop","subscribers","new_value","s","invalidate","subscriber","writable","loadCurrencies","async","fetch","json","currencies","currency","error","console","log","toggleCurrencyStatus","items","clone","JSON","parse","stringify","find","item","onClick","selectedCurrencies","$currenciesStore","attribute","removeAttribute","setAttribute","body"],"mappings":"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"}